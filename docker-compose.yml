
services:
  # authentication_service:
  #   build: ./backend/services/authentication_service
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #   ports:
  #     - "8001:8000"
  #   volumes:
  #     - ./backend/services/user_service:/auth

  # game_service:
  #   build: ./backend/services/game_service
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #   ports:
  #     - "8002:8000"
  #   volumes:
  #     - ./backend/services/game_service:/game

  # statistics_service:
  #   build: ./backend/services/statistics_service
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #   ports:
  #     - "8003:8000"
  #   volumes:
  #     - ./backend/services/statistics_service:/stats

  user_service:
    build: ./srcs/backend/user_service
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8004:8000"
    volumes:
      - ./srcs/backend/user_service:/user
    networks:
      - transcendece_nw

  # api_service:
  #   build: ./backend/services/api_service
  #   depends_on:
  #     database:
  #       condition: service_healthy
  #   ports:
  #     - "8005:8000"
  #   volumes:
  #     - ./backend/services/api_service:/api
  #   networks:
  #     - transcendece_nw

  database:
    image: postgres
    container_name: postgresql
    environment:
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_USER: postgres_user
      POSTGRES_NAME: postgresql
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_user"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
    - transcendece_nw

networks:
  transcendece_nw:
    driver: bridge

volumes:
  pgdata: