
services:
  frontend:
    container_name: frontend
    environment:
      - MAIN_HOST=${MAIN_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_NAME=${POSTGRES_NAME}
    env_file:
      - .env
    build: ./services/frontend
    # restart: on-failure
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./services/frontend:/frontend
    networks:
      - transcendence_nw

  user_management:
    container_name: user_management
    build: ./services/backend/user_management
    environment:
      - MAIN_HOST=${MAIN_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_NAME=${POSTGRES_NAME}
    env_file:
      - .env
    # restart: on-failure
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./services/backend/user_management:/user_management
    networks:
      - transcendence_nw

  game:
    container_name: game
    build: ./services/backend/game
    environment:
      - MAIN_HOST=${MAIN_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_NAME=${POSTGRES_NAME}
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./services/backend/game:/game
    networks:
      - transcendence_nw

  nginx:
    container_name: nginx
    build: ./services/nginx
    restart: on-failure
    environment:
      - MAIN_HOST=${MAIN_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_NAME=${POSTGRES_NAME}
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
      user_management:
        condition: service_started
      frontend:
        condition: service_started
    ports:
      - "8080:80"
      - "8443:443"
    networks:
      - transcendence_nw

  database:
    image: postgres
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_NAME: ${POSTGRES_NAME}
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/${POSTGRES_NAME}/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_user"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
    - transcendence_nw

networks:
  transcendence_nw:
    driver: bridge

volumes:
  pgdata: